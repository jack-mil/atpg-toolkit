#!/usr/bin/env bash

# Basic shell script to run the CLI against all test circuits 
# and save the output to a file. 
# Serves as reference for CLI usage of simulator

PYTHON=${PYTHON:-python3}
PROG=atpg-toolkit

echo "Run from top level directory (./scripts/generate-results)"

# Clear files if they exist
> data/results-sim.txt
> data/results-faults.txt
> data/results-podem.txt

# Loop over all files in the circuits directory
for circuit_file in circuits/*.net; do
    # Extract the base name of the circuit file (e.g., s349f_2 from circuits/s349f_2.net)
    base_name=$(basename "$circuit_file" .net)

    # Construct the corresponding test file name
    test_file="scripts/data/${base_name}-tests.txt"
    fault_file="scripts/data/${base_name}-faults.txt"

    # Check if the test file exists
    if [[ -f "$test_file" ]]; then
        set -x
        # Run the Python script and append the output to results for each circuit
        ${PYTHON} ${PROG} simulate "$circuit_file" -f "$test_file" >> data/results-sim.txt
        ${PYTHON} ${PROG} faults   "$circuit_file" -f "$test_file" >> data/results-faults.txt
        { set +x; } &> /dev/null
    else
        echo "Test file $test_file not found, skipping $circuit_file" 1>&2
    fi

    # Check if the file of faults exists
    if [[ -f "$fault_file" ]]; then
        set -x
        ${PYTHON} ${PROG} generate "$circuit_file" $(<"$fault_file") >> data/results-podem.txt
        { set +x; } &> /dev/null
    else
        echo "Fault file $fault_file not found, skipping $circuit_file" 1>&2
    fi
done
